<?xml version="1.0" encoding="UTF-8"?>
<interchunk>
<section-def-cats>

<!--section-def-cats starts from here -->

    <def-cat n="noun">
      <cat-item tags="NP.*"/>
       <cat-item tags="NP"/>
    </def-cat>
    <def-cat n="verb">
      <cat-item tags="VP.*"/> 
       <cat-item tags="VP"/>   
    </def-cat>
    <def-cat n="preposition">
       <cat-item tags="PP"/>
      <cat-item tags="PP.*"/>    
    </def-cat>
    <def-cat n="of_prep">
       <cat-item tags="PP_of"/>
    </def-cat>
    <def-cat n="adverb">
       <cat-item tags="ADVP"/>
      <cat-item tags="ADVP.*"/>
    </def-cat>
    <def-cat n="adjective">
       <cat-item tags="ADJP"/>
      <cat-item tags="ADJP.*"/>
    </def-cat>
    <def-cat n="conjunction">
       <cat-item tags="CNJ"/>
      <cat-item tags="CNJ.*"/>
    </def-cat>

    <def-cat n="SN">
      <cat-item tags="SN.*"/>
      <cat-item lemma="relnom" tags="REL.*"/>
    </def-cat>

     <def-cat n="SNnorel">
      <cat-item tags="SN.*"/>
    </def-cat>
    
    <def-cat n="SNnopro"><!-- BCN-->
      <cat-item tags="SN.DET.*"/>
      <cat-item tags="SN.UNDET.*"/>
    </def-cat>
    
    <def-cat n="negacio"><!-- BCN-->
      <cat-item tags="SN.DET.*.*.negacio"/>
    </def-cat>
    
    <def-cat n="pr">
      <cat-item tags="PREP"/>
    </def-cat>
    
    <def-cat n="and">
      <cat-item lemma="cnj" tags="cnjcoo"/>
    </def-cat>
    

    <def-cat n="SN_nopron">
      <cat-item tags="SN.DET.*"/>
      <cat-item tags="SN.UNDET.*"/>
      <cat-item tags="SN.NUM.*"/>
    </def-cat>

    <def-cat n="SNundet">
      <cat-item tags="SN.UNDET.*"/>
    </def-cat>

    <def-cat n="SV"><!--Verb conjugat, i tb infinitiu per quan el tagger s'equivoca. -->
      <cat-item lemma="verbcj" tags="SV.*"/>
      <cat-item tags="Vcop.*"/>
      <cat-item lemma="mod" tags="SV.*"/><!--MG: I have to <sent> : no deixar-ho penjat (haig de 'fer-ho'). En canvi : 'I have to <desconeguda>: sí que és 'haig de'. -->
      <cat-item lemma="auxmod_inf" tags="SV.*"/>
      <cat-item lemma="auxmod_inf_inf" tags="SV.*"/><!--BCN-->
      <cat-item lemma="be_ger_inf" tags="SV.*"/> <!--BCN-->
      <cat-item lemma="verbcj_inf" tags="SV.*"/>
      <cat-item lemma="verbcj_inf_perif" tags="SV.*"/>
      <cat-item lemma="verbcj_inf_enc" tags="SV.*"/>
      <cat-item lemma="auxmod_mod_inf" tags="SV.*"/>
      <cat-item lemma="do_inf" tags="SV.*"/>
      <cat-item lemma="mod_inf" tags="SV.*"/>
      <cat-item lemma="mod_perif" tags="SV.*"/>
      <cat-item lemma="mod_inf_perif" tags="SV.*"/>
      <cat-item lemma="aux_mod" tags="SV.*"/><!--Aquests van davant desconegudes o sent (I will have to.) -->
      <cat-item lemma="have_pp" tags="SV.*"/>
      <cat-item lemma="have_pp_inf" tags="SV.*"/><!-- BCN-->
      <cat-item lemma="auxmod_have_pp" tags="SV.*"/>
      <cat-item lemma="pro_auxmod_have_pp" tags="SV.*"/>
      <cat-item lemma="auxmod_have_pp_inf" tags="SV.*"/>
      <cat-item lemma="be_ger" tags="SV.*"/>
      <cat-item lemma="be_ger_enc" tags="SV.*"/>
      <cat-item tags="SV.vblex.inf.*"/>
      <cat-item tags="SV.pron.inf.*"/><!--afegit 16-01-2008 -->
      <cat-item tags="SV.vbmod.inf.*"/>
      <cat-item lemma="verbcj_perif" tags="SV.*"/>
      <cat-item lemma="pro_verbcj" tags="SV.*"/>
      <cat-item lemma="pro_verbcj_perif" tags="SV.*"/>
      <cat-item lemma="pro_auxmod_inf" tags="SV.*"/>
      <cat-item lemma="pro_mod_inf" tags="SV.*"/>
      <cat-item lemma="pro_mod_inf_perif" tags="SV.*"/>
      <cat-item lemma="pro_auxmod_mod_inf" tags="SV.*"/>
      <cat-item lemma="pro_have_pp" tags="SV.*"/>
      <cat-item lemma="pro_be_ger" tags="SV.*"/>
      <cat-item lemma="pro_do_inf" tags="SV.*"/>
      <cat-item tags="SV.reporting.inf.*"/>
      <cat-item tags="SV.reporting.pri.*"/>
      <cat-item tags="SV.reporting.cni.*"/>
      <cat-item tags="SV.reporting.ifip.*"/>
      <cat-item tags="SV.reporting.fti*"/>
      <cat-item tags="SV.reporting.pii*"/>
      
    </def-cat>
    
    <def-cat n="SVGER"><!-- BCN. Per ara no entren els compostos amb have (having won)-->
      <cat-item lemma="ger" tags="SV.*"/>
      <cat-item lemma="ger_enc" tags="SV.*"/>
      <cat-item lemma="ger_enc_enc" tags="SV.*"/>
    </def-cat>
    
  
    
    <def-cat n="vblike">
      <cat-item tags="SV.like.*"/>
    </def-cat>
    
    <def-cat n="vbreporting"><!-- BCN-->
      <cat-item tags="SV.reporting.*"/>
    </def-cat>
    
    <def-cat n="there">
      <cat-item lemma="there" tags="adv"/>
    </def-cat>

    <def-cat n="thereis">
      <cat-item lemma="be" tags="Vcop.*"/>
      <cat-item lemma="verbcj" tags="SV.vbser.*"/>
      <cat-item lemma="auxmod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="auxmod_mod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="auxmod_have_pp" tags="SV.vbser.*"/>
      <cat-item lemma="mod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="mod_inf_perif" tags="SV.vbser.*"/>
      <cat-item lemma="have_pp" tags="SV.vbser.*"/>
      <cat-item lemma="verbcj_perif" tags="SV.vbser.*"/> 
    </def-cat>


    <def-cat n="pro_vblike">
      <cat-item lemma="pro_verbcj" tags="SV.like.*"/>
      <cat-item lemma="pro_verbcj_perif" tags="SV.like.*"/>
      <cat-item lemma="pro_auxmod_inf" tags="SV.like.*"/>
      <cat-item lemma="pro_mod_inf" tags="SV.like.*"/>
      <cat-item lemma="pro_mod_inf_perif" tags="SV.like.*"/>
      <cat-item lemma="pro_auxmod_mod_inf" tags="SV.like.*"/>
      <cat-item lemma="pro_have_pp" tags="SV.like.*"/>
      <cat-item lemma="pro_be_ger" tags="SV.like.*"/>
      <cat-item lemma="pro_do_inf" tags="SV.like.*"/>
    </def-cat>

    <def-cat n="ADV">
      <cat-item tags="adv"/>
      <cat-item tags="adv.*"/>
    </def-cat>

   
    <def-cat n="SA">
      <cat-item tags="SA.*"/>
    </def-cat>

    <def-cat n="pp">
      <cat-item lemma="pp"  tags="SA.*"/>
      <cat-item lemma="adj"  tags="SA.*"/><!-- BCN per que agafi bé resolutions adopted -->
    </def-cat>


    <def-cat n="adj">
      <cat-item lemma="adj"  tags="SA.*"/>
      <cat-item lemma="np_pp"  tags="SA.*"/>
    </def-cat>

    <def-cat n="DET">
      <cat-item tags="DET.*"/>
    </def-cat>

   
    <def-cat n="RELAN">
      <cat-item tags="REL.an.*"/>
      <!--<cat-item tags="SN.an.*"/>-->
    </def-cat>
    
    <def-cat n="NUM">
      <cat-item tags="NUM.*"/>
    </def-cat>

    <def-cat n="punt">
      <cat-item tags="sent"/>
    </def-cat>

    <def-cat n="cnjcoo"> 
      <cat-item tags="cnjcoo"/>
    </def-cat>


<!--section-def-cats ends here -->

  </section-def-cats>

  <section-def-attrs>

<!--section-def-attrs starts from here -->

    <def-attr n="pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
      <attr-item tags="PD"/>
    </def-attr>

    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="mf"/>
      <attr-item tags="GD"/>
      <attr-item tags="nt"/>
    </def-attr>


    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>

    <def-attr n="case">
      <attr-item tags="d"/>
      <attr-item tags="o"/>
      <attr-item tags="CD"/>
    </def-attr>

    <def-attr n="subj_vibhakthi">
      <attr-item tags="parsarg:ko"/>
    </def-attr>


    <def-attr n="temps">
      <attr-item tags="inf"/>
      <attr-item tags="pres"/>
      <attr-item tags="past"/>
      <attr-item tags="pri"/>
      <attr-item tags="ifip"/>
      <attr-item tags="cni"/>
      <attr-item tags="fti"/>
      <attr-item tags="pp"/>
      <attr-item tags="ger"/>
      <attr-item tags="pprs"/>
      <attr-item tags="subs"/>
      <attr-item tags="imp"/>
      <attr-item tags="ifi"/>
      <attr-item tags="pii"/>
      <attr-item tags="pis"/>
      <attr-item tags="prs"/>
      
    </def-attr>

    <def-attr n="a_verb">
      <attr-item tags="vblex"/>	  
      <attr-item tags="vblex.pron"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="HAVER"/>
    </def-attr>
    
    <def-attr n="a_SN">
      <attr-item tags="DET"/>
      <attr-item tags="UNDET"/>
      <attr-item tags="NUM"/>
      <attr-item tags="PDET"/><!--'Per determinar', per a SN UNDET que han de passar a determinats, transformació que farà el postchunk detectant els PDET. -->
    </def-attr>

<!--section-def-attrs ends here -->

  </section-def-attrs>

  <section-def-vars>

<!--section-def-vars starts from here -->

    <def-var n="number"/>
    <def-var n="uno"/>
    <def-var n="nbrvar"/>
    <def-var n="genvar"/>
    <def-var n="vibhakthi"/>
    <def-var n="persvar"/>
    <def-var n="lemvar"/>
    <def-var n="nombre" v="&lt;sg&gt;"/>
    <def-var n="genere"/>

<!--section-def-vars ends here -->


  </section-def-vars>

  <section-def-macros>

<!--section-def-macros starts from here -->

    <def-macro n="test1" npar="1">
      <let>
        <var n="number"/>
        <lit v=""/>
      </let>
    </def-macro>


<!--section-def-macros ends here -->

  </section-def-macros>

  <section-rules>

<!--section-def-rules starts from here -->

    <rule comment="REGLA: SN">
      <pattern>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


<rule comment="REGLA: NP (Eg:apple)">
      <pattern>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <out>
         <chunk>
          <clip pos="1" part="whole"/>
         </chunk>
        </out>
        <let>
          <var n="nbrvar"/>
          <clip pos="1" part="nbr"/>
        </let>
        <let>
          <var n="persvar"/>
          <clip pos="1" part="pers"/>
        </let>
        <let>
          <var n="genvar"/>
          <clip pos="1" part="gen"/>
        </let>
      </action>
</rule>


<rule comment="REGLA: DET (per assignar gènere i nombre si hi ha GD i ND que no s'han pogut determinar, com passa en alguns pronoms: both, etc.)">
      <pattern>
	<pattern-item n="DET"/>
      </pattern>
      <action>
	<choose>
	  <when>
	    <test>
	      <equal>
		<clip pos="1" part="gen"/>
		<lit-tag v="GD"/>
	      </equal>
	    </test>
	    <let>
	      <clip pos="1" part="gen"/>
	      <lit-tag v="m"/>
	    </let>
	  </when>
	</choose>
	<choose>
	  <when>
	    <test>
	      <equal>
		<clip pos="1" part="nbr"/>
		<lit-tag v="ND"/>
	      </equal>
	    </test>
	    <let>
	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </let>
	  </when>
	</choose>
	<out>
	  <chunk>
	    <clip pos="1" part="whole"/>
	  </chunk>
	</out>
      </action>
    </rule>



<rule comment="REGLA: NUM (per assignar gènere si hi ha GD)">
      <pattern>
	<pattern-item n="NUM"/>
      </pattern>
      <action>
	<choose>
	  <when>
	    <test>
	      <equal>
		<clip pos="1" part="gen"/>
		<lit-tag v="GD"/>
	      </equal>
	    </test>
	    <let>
	      <clip pos="1" part="gen"/>
	      <lit-tag v="m"/>
	    </let>
	  </when>
	</choose>
	<choose>
	  <when>
	    <test>
	      <equal>
		<clip pos="1" part="nbr"/>
		<lit-tag v="ND"/>
	      </equal>
	    </test>
	    <let>
	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </let>
	  </when>
	</choose>	
	<out>
	  <chunk>
	    <clip pos="1" part="whole"/>
	  </chunk>
	</out>
      </action>
    </rule>

<rule> <!-- REGLA: reset variables-->
      <pattern>
	<pattern-item n="punt"/>
      </pattern>
      <action>
	<let>
	  <var n="nombre"/>
	  <lit-tag v="sg"/>
	</let>
	<out>
	  <chunk>
	    <clip pos="1" part="whole"/>
	  </chunk>
	</out>
      </action>
    </rule>


<!--section-def-rules ends here -->

  </section-rules>
</interchunk>

<!--
Resources:
    https://wiki.apertium.org/wiki/Chunking:_A_full_example
    https://wiki.apertium.org/wiki/Chunking
    https://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    https://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    https://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

